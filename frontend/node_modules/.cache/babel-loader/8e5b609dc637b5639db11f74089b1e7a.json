{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/Navigation/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\nimport LoginFormModal from '../LoginFormModal';\nimport Splash from '../Splash/Splash';\nimport './Navigation.css';\nimport { getTokenFromResponse } from '../Splash/spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Home from '../Home/Home';\nimport { useDataLayerValue } from '../../DataLayer/DataLayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst spotify = new SpotifyWebApi(); //source: https://www.npmjs.com/package/spotify-web-api-js\n\nfunction Navigation({\n  isLoaded\n}) {\n  _s();\n\n  const sessionUser = useSelector(state => state.session.user);\n  const [{\n    spotifyuser,\n    token\n  }, dispatch] = useDataLayerValue();\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      spotify.setAccessToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token\n      });\n      spotify.getMe().then(spotifyuser => {\n        dispatch({\n          type: 'SET_SPOTIFY_USER',\n          spotifyuser: spotifyuser\n        });\n      });\n      spotify.getMyTopArtists().then(response => dispatch({\n        type: \"SET_TOP_ARTISTS\",\n        top_artists: response\n      }));\n      dispatch({\n        type: \"SET_SPOTIFY\",\n        spotify: spotify\n      });\n      spotify.getUserPlaylists().then(playlists => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists\n        });\n      });\n      spotify.getPlaylist('37i9dQZEVXcLaymYeKGb6o').then(response => dispatch({\n        type: \"SET_DISCOVER_WEEKLY\",\n        discover_weekly: response\n      }));\n    }\n  }, [token, dispatch]); //run code based on a given condition\n\n  console.log(\"-------\", spotifyuser);\n  console.log(\"******\", token);\n  let sessionLinks;\n\n  if (sessionUser) {\n    sessionLinks = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavLink, {\n        exact: true,\n        to: \"/\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ProfileButton, {\n        user: sessionUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  } else {\n    sessionLinks = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: token ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Home, {\n          spotify: spotify\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Splash, {\n          path: \"/\",\n          exact: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(LoginFormModal, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true)\n    }, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      children: isLoaded && sessionLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Navigation, \"LyXk5YF4DWi43HBdn9Ku5SGWUyo=\", false, function () {\n  return [useSelector, useDataLayerValue];\n});\n\n_c = Navigation;\nexport default Navigation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navigation\");","map":{"version":3,"sources":["/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/Navigation/index.js"],"names":["React","useState","useEffect","NavLink","useSelector","ProfileButton","LoginFormModal","Splash","getTokenFromResponse","SpotifyWebApi","Home","useDataLayerValue","spotify","Navigation","isLoaded","sessionUser","state","session","user","spotifyuser","token","dispatch","hash","window","location","_token","access_token","setAccessToken","type","getMe","then","getMyTopArtists","response","top_artists","getUserPlaylists","playlists","getPlaylist","discover_weekly","console","log","sessionLinks"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport ProfileButton from './ProfileButton';\nimport LoginFormModal from '../LoginFormModal';\nimport Splash from '../Splash/Splash';\nimport './Navigation.css';\nimport { getTokenFromResponse } from '../Splash/spotify';\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport Home from '../Home/Home';\nimport { useDataLayerValue } from '../../DataLayer/DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\n//source: https://www.npmjs.com/package/spotify-web-api-js\n\nfunction Navigation({ isLoaded }){\n  const sessionUser = useSelector(state => state.session.user);\n  const [{spotifyuser, token}, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromResponse();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if (_token) {\n      spotify.setAccessToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.getMe().then(spotifyuser => {\n        dispatch( {\n          type: 'SET_SPOTIFY_USER',\n          spotifyuser: spotifyuser\n        });\n      });\n\n      spotify.getMyTopArtists().then((response) =>\n      dispatch({\n        type: \"SET_TOP_ARTISTS\",\n        top_artists: response,\n      })\n    );\n\n    dispatch({\n      type: \"SET_SPOTIFY\",\n      spotify: spotify,\n    });\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n      spotify.getPlaylist('37i9dQZEVXcLaymYeKGb6o').then((response) =>\n         dispatch({\n           type: \"SET_DISCOVER_WEEKLY\",\n           discover_weekly: response,\n         })\n        );\n    }\n  }, [token, dispatch]);\n//run code based on a given condition\nconsole.log(\"-------\", spotifyuser);\nconsole.log(\"******\", token);\n\n  let sessionLinks;\n  if (sessionUser) {\n    sessionLinks = (\n      <>\n      <NavLink exact to=\"/\">Home</NavLink>\n      <ProfileButton user={sessionUser} />\n      </>\n    );\n  } else {\n    sessionLinks = (\n      <>\n      { token ? (\n        <>\n        <Home spotify={spotify} />\n        </>\n      ) : (\n      <>\n      <Splash path=\"/\" exact={true} />\n      <LoginFormModal />\n      <NavLink to=\"/signup\">Sign Up</NavLink>\n      </>\n      )\n      }\n      </>\n    );\n  }\n\n  return (\n    <ul>\n      <li>\n        {isLoaded && sessionLinks}\n      </li>\n    </ul>\n  );\n}\n\nexport default Navigation;\n"]},"metadata":{},"sourceType":"module"}