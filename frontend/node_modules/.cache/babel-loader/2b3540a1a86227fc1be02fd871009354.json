{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/Body/Body.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./Body.css\";\nimport Header from '../Header.js/Header';\nimport { useDataLayerValue } from '../../DataLayer/DataLayer';\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport SongRow from '../SongRow/SongRow';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllBets, betCreate, deleteBet } from \"../../store/bets\";\nimport { Grid } from \"@material-ui/core\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Body({\n  spotify\n}) {\n  _s();\n\n  const [{\n    discover_weekly,\n    spotifyuser\n  }, _dispatch] = useDataLayerValue();\n  const history = useHistory();\n  const [betTeam, setBetTeam] = useState(\"\");\n  const [opposingTeam, setOpposingTeam] = useState(\"\");\n  const [betType, setBetType] = useState(\"Bet Type\");\n  const [line, setLine] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [reason, setReason] = useState(\"\");\n  const dispatch = useDispatch();\n  const allBets = useSelector(state => Object.values(state.bets));\n  const userId = useSelector(state => {\n    var _state$session$user;\n\n    return (_state$session$user = state.session.user) === null || _state$session$user === void 0 ? void 0 : _state$session$user.id;\n  });\n  console.log(\"000000000\", allBets);\n\n  const playPlaylist = id => {\n    spotify.play({\n      context_uri: `spotify:playlist:0jZc9KmCnD8evywM006qgi`\n    }).then(res => {\n      spotify.getMyCurrentPlayingTrack().then(r => {\n        _dispatch({\n          type: \"SET_ITEM\",\n          item: r.item\n        });\n\n        _dispatch({\n          type: \"SET_PLAYING\",\n          playing: true\n        });\n      });\n    });\n  };\n\n  const playSong = id => {\n    spotify.play({\n      uris: [`spotify:track:${id}`]\n    }).then(res => {\n      spotify.getMyCurrentPlayingTrack().then(r => {\n        _dispatch({\n          type: \"SET_ITEM\",\n          item: r.item\n        });\n\n        _dispatch({\n          type: \"SET_PLAYING\",\n          playing: true\n        });\n      });\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getAllBets());\n  }, [dispatch]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const newBet = {\n      userId,\n      betTeam,\n      opposingTeam,\n      betType,\n      line,\n      amount,\n      reason\n    };\n    let createdBet = dispatch(betCreate(newBet));\n    dispatch(getAllBets());\n\n    if (createdBet) {\n      setBetTeam(\"\");\n      history.push('/bets');\n    }\n  }; //array.sort date.parse b - date.parse a (a and b are 1st and second argument passed into .sort)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        // src={spotifyuser?.images[0]?.url}\n        src: \"https://www.hypebot.com/wp-content/uploads/2020/07/discover-weekly.png\" // src={discover_weekly?.images[0].url}\n        ,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__infoText\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"BETLIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Discover Bets Weekly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your weekly mixtape of fresh bets. Enjoy new bets and deep cuts based on  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__songs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__icons\",\n        children: [/*#__PURE__*/_jsxDEV(PlayCircleFilledIcon, {\n          className: \"body__shuffle\",\n          onClick: playPlaylist\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FavoriteIcon, {\n          fontSize: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MoreHorizIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__info\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: betTeam,\n                onChange: e => setBetTeam(e.target.value),\n                type: \"text\",\n                className: \"input\",\n                placeholder: \"Team #1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: amount,\n                onChange: e => setAmount(e.target.value),\n                type: \"text\",\n                className: \"input\",\n                placeholder: \"$$ Amount $$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: line,\n                onChange: e => setLine(e.target.value),\n                type: \"text\",\n                className: \"input\",\n                placeholder: \"Line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: opposingTeam,\n                onChange: e => setOpposingTeam(e.target.value),\n                className: \"input\",\n                type: \"text\",\n                placeholder: \"Team #2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: reason,\n                onChange: e => setReason(e.target.value),\n                className: \"input\",\n                type: \"text\",\n                placeholder: \"Reason\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: betType,\n                onChange: e => setBetType(e.target.value),\n                className: \"input\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Bet Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Straight\",\n                  children: \"Straight\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Spread\",\n                  children: \"Spread\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Over\",\n                  children: \"Over\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Under\",\n                  children: \"Under\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Parlay\",\n                  children: \"Parlay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSubmit,\n                type: \"submit\",\n                className: \"auth-btn\",\n                children: \"Add Bet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }, this), allBets && allBets.map(bet => /*#__PURE__*/_jsxDEV(SongRow, {\n        bet: bet\n      }, bet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Body, \"0q0Z45MdV3Qdnvp/q2LDMEZz6X0=\", false, function () {\n  return [useDataLayerValue, useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/Body/Body.js"],"names":["React","Header","useDataLayerValue","PlayCircleFilledIcon","FavoriteIcon","MoreHorizIcon","SongRow","useState","useEffect","useDispatch","useSelector","getAllBets","betCreate","deleteBet","Grid","useHistory","Body","spotify","discover_weekly","spotifyuser","_dispatch","history","betTeam","setBetTeam","opposingTeam","setOpposingTeam","betType","setBetType","line","setLine","amount","setAmount","reason","setReason","dispatch","allBets","state","Object","values","bets","userId","session","user","id","console","log","playPlaylist","play","context_uri","then","res","getMyCurrentPlayingTrack","r","type","item","playing","playSong","uris","handleSubmit","e","preventDefault","newBet","createdBet","push","target","value","map","bet"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./Body.css\"\nimport Header from '../Header.js/Header'\nimport { useDataLayerValue } from '../../DataLayer/DataLayer'\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport SongRow from '../SongRow/SongRow';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllBets, betCreate, deleteBet } from \"../../store/bets\";\nimport { Grid } from \"@material-ui/core\";\nimport { useHistory } from 'react-router-dom';\n\n\nfunction Body( { spotify }) {\n    const [{ discover_weekly, spotifyuser }, _dispatch ] = useDataLayerValue();\n    const history = useHistory();\n    const [betTeam, setBetTeam] = useState(\"\");\n    const [opposingTeam, setOpposingTeam] = useState(\"\");\n    const [betType, setBetType] = useState(\"Bet Type\");\n    const [line, setLine] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [reason, setReason] = useState(\"\");\n    const dispatch = useDispatch();\n    const allBets = useSelector(state => Object.values(state.bets));\n    const userId = useSelector(state => state.session.user?.id);\n\n    console.log(\"000000000\", allBets)\n\n    const playPlaylist = (id) => {\n        spotify\n          .play({\n            context_uri: `spotify:playlist:0jZc9KmCnD8evywM006qgi`,\n          })\n          .then((res) => {\n            spotify.getMyCurrentPlayingTrack().then((r) => {\n              _dispatch({\n                type: \"SET_ITEM\",\n                item: r.item,\n              });\n              _dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n              });\n            });\n          });\n      };\n\n      const playSong = (id) => {\n        spotify\n          .play({\n            uris: [`spotify:track:${id}`],\n          })\n          .then((res) => {\n            spotify.getMyCurrentPlayingTrack().then((r) => {\n              _dispatch({\n                type: \"SET_ITEM\",\n                item: r.item,\n              });\n              _dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n              });\n            });\n          });\n      };\n\n      useEffect(() => {\n        dispatch(getAllBets());\n      }, [dispatch]);\n\n      const handleSubmit = (e) => {\n        e.preventDefault();\n        const newBet = {userId, betTeam, opposingTeam, betType, line, amount, reason }\n        let createdBet = dispatch(betCreate(newBet))\n        dispatch(getAllBets())\n        if (createdBet) {\n          setBetTeam(\"\")\n          history.push('/bets')\n        }\n      }\n\n      //array.sort date.parse b - date.parse a (a and b are 1st and second argument passed into .sort)\n\n    return (\n        <div className=\"body\">\n            <Header spotify={spotify}/>\n            <div className=\"body__info\">\n                {/* <img src=\"https://thumb.spokesman.com/GsJALbsxruDIAgPJdGdubb-x00I=/2500x0/media.spokesman.com/photos/2020/07/15/5f0dee5554d81.hires.jpg\" alt=\"\"/> */}\n                <img\n                // src={spotifyuser?.images[0]?.url}\n                src=\"https://www.hypebot.com/wp-content/uploads/2020/07/discover-weekly.png\"\n                // src={discover_weekly?.images[0].url}\n                alt=\"\"\n                />\n                <div className=\"body__infoText\">\n                    <strong>BETLIST</strong>\n                    <h2>Discover Bets Weekly</h2>\n                {/* <p>description...</p> */}\n                    {/* <p>{discover_weekly?.description}</p> */}\n                    <p>Your weekly mixtape of fresh bets. Enjoy new bets and deep cuts based on  </p>\n                </div>\n                </div>\n                <div className=\"body__songs\">\n                <div className=\"body__icons\">\n                    <PlayCircleFilledIcon\n                    className=\"body__shuffle\"\n                    onClick={playPlaylist}/>\n                    <FavoriteIcon fontSize=\"large\"/>\n                    <MoreHorizIcon />\n                </div>\n                  <div className=\"body__info\">\n                    {/* <tr key={bet.id}></tr> */}\n                    <form action=\"\">\n                      <Grid container spacing={2}>\n                      <Grid item>\n                        <input value={betTeam} onChange={e => setBetTeam(e.target.value)} type = \"text\" className=\"input\" placeholder=\"Team #1\"/>\n                      </Grid>\n                      <Grid item>\n                        <input value={amount} onChange={e => setAmount(e.target.value)} type = \"text\" className=\"input\" placeholder=\"$$ Amount $$\"/>\n                      </Grid>\n                      <Grid item>\n                        <input value={line} onChange={e => setLine(e.target.value)} type = \"text\" className=\"input\" placeholder=\"Line\"/>\n                      </Grid>\n                        <Grid item>\n                        <input value={opposingTeam} onChange={e => setOpposingTeam(e.target.value)} className=\"input\" type=\"text\" placeholder=\"Team #2\"/>\n                        </Grid>\n                        <Grid item>\n                        <input value={reason} onChange={e => setReason(e.target.value)} className=\"input\" type=\"text\" placeholder=\"Reason\"/>\n                        </Grid>\n                        <Grid item>\n                        <select value={betType} onChange={e => setBetType (e.target.value)} className=\"input\">\n                          <option disabled>Bet Type</option>\n                          <option value=\"Straight\">Straight</option>\n                          <option value=\"Spread\">Spread</option>\n                          <option value=\"Over\">Over</option>\n                          <option value=\"Under\">Under</option>\n                          <option value=\"Parlay\">Parlay</option>\n                        </select>\n                        </Grid>\n                        <Grid item>\n                          <button onClick={handleSubmit} type=\"submit\" className=\"auth-btn\">Add Bet</button>\n                        </Grid>\n                      </Grid>\n                    </form>\n                </div>\n                    {/* List of songs */}\n                    {/* {discover_weekly?.tracks.items.map( (item) => (\n                        <SongRow playSong={playSong} track={item.track} />\n                        ))} */}\n                        {/* array.sort.map here */}\n                    {allBets && allBets.map( (bet) => (\n                        <SongRow key={bet.id} bet={bet} />\n                        ))}\n                </div>\n        </div>\n    )\n}\n\nexport default Body;\n"]},"metadata":{},"sourceType":"module"}