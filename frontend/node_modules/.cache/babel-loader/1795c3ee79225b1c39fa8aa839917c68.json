{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/AddReview/AddReview.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useState, useEffect } from 'react';\nimport { reviewCreate } from '../../store/reviews';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllBets, betCreate, deleteBet } from \"../../store/bets\";\nimport { useParams, useHistory, useLocation } from 'react-router';\nimport \"./AddReview.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst betTypes = [{\n  value: '1'\n}, {\n  value: '2'\n}, {\n  value: '3'\n}, {\n  value: '4'\n}, {\n  value: '5'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nexport default function AddReview({\n  betId\n}) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const classes = useStyles(); //   const [currency, setCurrency] = React.useState('EUR');\n\n  const [name, setName] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const userId = useSelector(state => {\n    var _state$session$user;\n\n    return (_state$session$user = state.session.user) === null || _state$session$user === void 0 ? void 0 : _state$session$user.id;\n  });\n  const dispatch = useDispatch();\n  const history = useHistory(); //   const handleChange = (event) => {\n  //     setCurrency(event.target.value);\n  //   };\n\n  useEffect(() => {}, [dispatch]);\n\n  const handleSubmitReview = async e => {\n    e.preventDefault();\n    const newReview = {\n      userId,\n      betId,\n      name,\n      rating,\n      answer\n    };\n    console.log(\"newReview\", newReview);\n    let createdReview = await dispatch(reviewCreate(newReview)); // dispatch(getAllBets())\n\n    if (createdReview) {\n      //   setBetTeam(\"\")\n      history.push('/');\n      history.push(`/bets/${id}`);\n    }\n  }; //   history.push(\"/\")\n  //   history.push(location.pathname) - useLocation\n\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review_border\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            value: betTeam,\n            onChange: e => setBetTeam(e.target.value),\n            type: \"text\",\n            className: \"input\",\n            placeholder: \"Team #1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"name\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        label: \"Outlined secondary\",\n        variant: \"outlined\",\n        color: \"secondary\",\n        InputProps: {\n          className: classes.input\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review_border\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"rating\",\n        select: true,\n        label: \"Pick\",\n        value: rating,\n        onChange: e => setRating(e.target.value) //   onChange={handleChange}\n        ,\n        helperText: \"Please select your currency\",\n        children: betTypes.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.value\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 16\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"review_border\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"answer\",\n        label: \"Review\",\n        value: answer,\n        onChange: e => setAnswer(e.target.value),\n        multiline: true,\n        rows: 4 //   defaultValue=\"Comment\"\n        ,\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitReview,\n      type: \"submit\",\n      className: \"auth-btn\",\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddReview, \"WZZknVLpLcZLRE9Wdx/cx9fFVro=\", false, function () {\n  return [useParams, useStyles, useSelector, useDispatch, useHistory];\n});\n\n_c = AddReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReview\");","map":{"version":3,"sources":["/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/AddReview/AddReview.js"],"names":["React","makeStyles","TextField","MenuItem","useState","useEffect","reviewCreate","useDispatch","useSelector","getAllBets","betCreate","deleteBet","useParams","useHistory","useLocation","betTypes","value","useStyles","theme","root","margin","spacing","width","AddReview","betId","id","classes","name","setName","rating","setRating","answer","setAnswer","userId","state","session","user","dispatch","history","handleSubmitReview","e","preventDefault","newReview","console","log","createdReview","push","betTeam","setBetTeam","target","className","input","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useState, useEffect } from 'react';\nimport { reviewCreate } from '../../store/reviews';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllBets, betCreate, deleteBet } from \"../../store/bets\";\nimport { useParams, useHistory, useLocation } from 'react-router';\nimport \"./AddReview.css\"\n\n\nconst betTypes = [\n    {\n      value: '1',\n    },\n    {\n      value: '2',\n    },\n    {\n      value: '3',\n    },\n    {\n      value: '4',\n    },\n    {\n        value: '5',\n      },\n  ];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function AddReview( {betId}) {\n  const { id } = useParams();\n  const classes = useStyles();\n//   const [currency, setCurrency] = React.useState('EUR');\n  const [name, setName] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const userId = useSelector(state => state.session.user?.id);\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n//   const handleChange = (event) => {\n//     setCurrency(event.target.value);\n//   };\n\nuseEffect(() => {\n}, [dispatch]);\n\nconst handleSubmitReview = async (e) => {\n    e.preventDefault();\n    const newReview = {userId, betId, name, rating, answer}\n    console.log(\"newReview\", newReview)\n    let createdReview = await dispatch(reviewCreate(newReview))\n    // dispatch(getAllBets())\n    if (createdReview) {\n    //   setBetTeam(\"\")\n        history.push('/')\n        history.push(`/bets/${id}`)\n    }\n  }\n\n//   history.push(\"/\")\n//   history.push(location.pathname) - useLocation\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div className=\"review_border\">\n      <Grid container spacing={2}>\n      <Grid item>\n      <input value={betTeam} onChange={e => setBetTeam(e.target.value)} type = \"text\" className=\"input\" placeholder=\"Team #1\"/>\n      </Grid>\n      </Grid>\n      <TextField\n        id=\"name\"\n        value={name}\n        onChange = {e => setName(e.target.value)}\n        label=\"Outlined secondary\"\n        variant=\"outlined\"\n        color=\"secondary\"\n        InputProps={{\n          className: classes.input\n        }}\n      />\n      </div>\n      <div className=\"review_border\">\n      <TextField\n      id=\"rating\"\n      select\n      label=\"Pick\"\n      value={rating}\n      onChange={e => setRating(e.target.value)}\n    //   onChange={handleChange}\n      helperText=\"Please select your currency\"\n      >\n          {betTypes.map((option) => (\n               <MenuItem key={option.value} value={option.value}>\n                   {option.value}\n                   </MenuItem>\n                   ))}\n        {/* <option value=\"1\">1</option>\n        <option value=\"2\">2</option> */}\n    </TextField>\n    </div>\n    <div className=\"review_border\">\n    <TextField\n          id=\"answer\"\n          label=\"Review\"\n          value={answer}\n          onChange={e => setAnswer(e.target.value)}\n          multiline\n          rows={4}\n        //   defaultValue=\"Comment\"\n          variant=\"outlined\"\n        />\n        </div>\n    <button onClick={handleSubmitReview} type=\"submit\" className=\"auth-btn\">Add Comment</button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}