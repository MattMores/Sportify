{"ast":null,"code":"import { csrfFetch } from \"./csrf\"; // Define Action TYpes as Constants\n// const SET_BETS = \"bets/GET_ALL_BETS\";\n\nconst ADD_REVIEW = \"reviews/ADD_REVIEW\";\nconst DELETE_REVIEW = \"reviews/DELETE_REVIEW\";\nconst UPDATE_REVIEW = \"reviews/UPDATE_BET\"; // Define Action Creators\n// const setBets = (bets) => ({\n//     type: SET_BETS,\n//     bets, // payload\n// })\n\nconst addReview = review => ({\n  type: ADD_REVIEW,\n  review\n});\n\nconst del = reviewId => ({\n  type: DELETE_REVIEW,\n  reviewId\n});\n\nconst updateReview = review => ({\n  type: UPDATE_REVIEW,\n  review\n}); // Define Thunks\n// export const getAllBets = () => async (dispatch) => {\n//     const res = await csrfFetch('/api/bets');\n//     const bets = await res.json();\n//     dispatch(setBets(bets));\n// }\n\n\nexport const reviewCreate = review => async dispatch => {\n  console.log(\"RRRRRRRR\", review); // const { userId, title, content, notebookId } = note; //notebookId\n\n  const res = await csrfFetch(\"/api/reviews\", {\n    method: \"POST\",\n    body: JSON.stringify(review)\n  });\n\n  if (res.ok) {\n    const review = await res.json();\n    console.log(\"REVIEWIWIWIWIWIW\", review);\n    dispatch(addReview(review));\n    return res;\n  } // const newNote = await response.json();\n  // console.log(newNote)\n  // dispatch(addNote(newNote));\n  // return response;\n\n};\nexport const deleteReview = id => async dispatch => {\n  await csrfFetch('/api/reviews', {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      id\n    })\n  });\n  dispatch(del(id));\n};\nexport const reviewUpdate = review => async dispatch => {\n  const res = await csrfFetch('/api/reviews', {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(review)\n  });\n\n  if (res.ok) {\n    const updatedReview = await res.json();\n    console.log(\"uppppppppppdated Review\", updatedReview);\n    dispatch(updateReview(updatedReview));\n  }\n}; // Define an initial state\n\nconst initialState = {}; //Define a Reducer\n\nconst reviewsReducer = (state = initialState, action) => {\n  let newState;\n\n  switch (action.type) {\n    // case SET_BETS:\n    //     console.log(\"999999999999999\", action.bets)\n    //     const allBets = {};\n    //     action.bets.forEach((bet) => {\n    //         allBets[bet.id] = bet;\n    //     })\n    //     return {\n    //         ...state,\n    //         ...allBets,\n    //     }\n    case ADD_REVIEW:\n      {\n        return { ...state,\n          [action.review.id]: action.review\n        };\n      }\n\n    case UPDATE_REVIEW:\n      const {\n        review\n      } = action;\n      newState = { ...state,\n        [review.id]: review\n      };\n      return newState;\n    // case DELETE_BET:\n    //     console.log(\"ppppppp\", action)\n    //     newState = {...state}\n    //     delete newState[action.betId]\n    //     return newState\n\n    default:\n      return state;\n  }\n};\n\nexport default reviewsReducer;","map":{"version":3,"sources":["/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/store/reviews.js"],"names":["csrfFetch","ADD_REVIEW","DELETE_REVIEW","UPDATE_REVIEW","addReview","review","type","del","reviewId","updateReview","reviewCreate","dispatch","console","log","res","method","body","JSON","stringify","ok","json","deleteReview","id","headers","reviewUpdate","updatedReview","initialState","reviewsReducer","state","action","newState"],"mappings":"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","sourcesContent":["import { csrfFetch } from \"./csrf\";\n\n// Define Action TYpes as Constants\n// const SET_BETS = \"bets/GET_ALL_BETS\";\nconst ADD_REVIEW = \"reviews/ADD_REVIEW\"\nconst DELETE_REVIEW = \"reviews/DELETE_REVIEW\"\nconst UPDATE_REVIEW = \"reviews/UPDATE_BET\"\n\n// Define Action Creators\n// const setBets = (bets) => ({\n//     type: SET_BETS,\n//     bets, // payload\n// })\n\nconst addReview = (review) => ({\n    type: ADD_REVIEW,\n    review,\n  });\n\nconst del = (reviewId) => ({\n    type: DELETE_REVIEW,\n    reviewId,\n});\n\nconst updateReview = (review) => ({\n    type: UPDATE_REVIEW,\n    review,\n})\n\n// Define Thunks\n// export const getAllBets = () => async (dispatch) => {\n//     const res = await csrfFetch('/api/bets');\n//     const bets = await res.json();\n//     dispatch(setBets(bets));\n// }\n\nexport const reviewCreate = (review) => async (dispatch) => {\n    console.log(\"RRRRRRRR\", review)\n    // const { userId, title, content, notebookId } = note; //notebookId\n    const res = await csrfFetch(\"/api/reviews\", {\n        method: \"POST\",\n        body: JSON.stringify(review),\n    });\n    if (res.ok) {\n        const review = await res.json();\n        console.log(\"REVIEWIWIWIWIWIW\", review)\n        dispatch(addReview(review))\n        return res;\n    }\n    // const newNote = await response.json();\n    // console.log(newNote)\n    // dispatch(addNote(newNote));\n    // return response;\n};\n\nexport const deleteReview = (id) => async (dispatch) => {\n    await csrfFetch('/api/reviews', {\n      method: 'DELETE',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ id }),\n    });\n\n    dispatch(del(id));\n  };\n\nexport const reviewUpdate = (review) => async (dispatch) => {\n    const res = await csrfFetch('/api/reviews', {\n    method: 'PUT',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify(review),\n});\nif (res.ok) {\n    const updatedReview = await res.json();\n    console.log(\"uppppppppppdated Review\", updatedReview)\n    dispatch(updateReview(updatedReview))\n}\n};\n\n// Define an initial state\nconst initialState = {};\n\n//Define a Reducer\nconst reviewsReducer = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        // case SET_BETS:\n        //     console.log(\"999999999999999\", action.bets)\n        //     const allBets = {};\n        //     action.bets.forEach((bet) => {\n        //         allBets[bet.id] = bet;\n        //     })\n        //     return {\n        //         ...state,\n        //         ...allBets,\n        //     }\n        case ADD_REVIEW: {\n            return {\n                ...state,\n                [action.review.id]: action.review,\n              };\n            }\n        case UPDATE_REVIEW:\n            const { review } = action\n            newState = {...state, [review.id] : review}\n            return newState;\n        // case DELETE_BET:\n        //     console.log(\"ppppppp\", action)\n        //     newState = {...state}\n        //     delete newState[action.betId]\n        //     return newState\n        default:\n            return state;\n    }\n}\n\nexport default reviewsReducer;\n"]},"metadata":{},"sourceType":"module"}