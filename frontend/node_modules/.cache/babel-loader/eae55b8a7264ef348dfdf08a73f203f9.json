{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/AddReview/AddReview.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useState, useEffect } from 'react';\nimport { reviewCreate } from '../../store/reviews';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllBets, betCreate, deleteBet } from \"../../store/bets\";\nimport { useLocation } from \"react-router-dom;\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst betTypes = [{\n  value: '1'\n}, {\n  value: '2'\n}, {\n  value: '3'\n}, {\n  value: '4'\n}, {\n  value: '5'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  }\n}));\nexport default function AddReview({\n  betId\n}) {\n  _s();\n\n  const classes = useStyles();\n  const location = useLocation(); //   const [currency, setCurrency] = React.useState('EUR');\n\n  const [name, setName] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const userId = useSelector(state => {\n    var _state$session$user;\n\n    return (_state$session$user = state.session.user) === null || _state$session$user === void 0 ? void 0 : _state$session$user.id;\n  });\n  const dispatch = useDispatch(); //   const handleChange = (event) => {\n  //     setCurrency(event.target.value);\n  //   };\n\n  const handleSubmitReview = e => {\n    e.preventDefault();\n    const newReview = {\n      userId,\n      betId,\n      name,\n      rating,\n      answer\n    };\n    dispatch(reviewCreate(newReview));\n    dispatch(getAllBets()); // if (createdBet) {\n    //   setBetTeam(\"\")\n    //   history.push('/bets')\n    // }\n  };\n\n  useEffect(() => {}, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      id: \"name\",\n      value: name,\n      onChange: e => setName(e.target.value),\n      label: \"Outlined secondary\",\n      variant: \"outlined\",\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"rating\",\n      select: true,\n      label: \"Pick\",\n      value: rating,\n      onChange: e => setRating(e.target.value) //   onChange={handleChange}\n      ,\n      helperText: \"Please select your currency\",\n      children: betTypes.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: option.value,\n        children: option.value\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 16\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"answer\",\n      label: \"Review\",\n      value: answer,\n      onChange: e => setAnswer(e.target.value),\n      multiline: true,\n      rows: 4 //   defaultValue=\"Comment\"\n      ,\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmitReview,\n      type: \"submit\",\n      className: \"auth-btn\",\n      children: \"Add Comment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddReview, \"wwQYPRenmuYhjssHebI0CXBgt1I=\", false, function () {\n  return [useStyles, useLocation, useSelector, useDispatch];\n});\n\n_c = AddReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReview\");","map":{"version":3,"sources":["/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/AddReview/AddReview.js"],"names":["React","makeStyles","TextField","MenuItem","useState","useEffect","reviewCreate","useDispatch","useSelector","getAllBets","betCreate","deleteBet","useLocation","betTypes","value","useStyles","theme","root","margin","spacing","width","AddReview","betId","classes","location","name","setName","rating","setRating","answer","setAnswer","userId","state","session","user","id","dispatch","handleSubmitReview","e","preventDefault","newReview","target","map","option"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { useState, useEffect } from 'react';\nimport { reviewCreate } from '../../store/reviews';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllBets, betCreate, deleteBet } from \"../../store/bets\";\nimport { useLocation } from \"react-router-dom;\"\n\nconst betTypes = [\n    {\n      value: '1',\n    },\n    {\n      value: '2',\n    },\n    {\n      value: '3',\n    },\n    {\n      value: '4',\n    },\n    {\n        value: '5',\n      },\n  ];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n}));\n\nexport default function AddReview( {betId}) {\n  const classes = useStyles();\n  const location = useLocation();\n//   const [currency, setCurrency] = React.useState('EUR');\n  const [name, setName] = useState(\"\");\n  const [rating, setRating] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const userId = useSelector(state => state.session.user?.id);\n  const dispatch = useDispatch();\n\n//   const handleChange = (event) => {\n//     setCurrency(event.target.value);\n//   };\n\nconst handleSubmitReview = (e) => {\n    e.preventDefault();\n    const newReview = {userId, betId, name, rating, answer}\n    dispatch(reviewCreate(newReview))\n    dispatch(getAllBets())\n    // if (createdBet) {\n    //   setBetTeam(\"\")\n    //   history.push('/bets')\n    // }\n  }\n\n  useEffect(() => {\n  }, [dispatch]);\n\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      {/* <TextField id=\"standard-secondary\" label=\"Standard secondary\" color=\"secondary\" />\n      <TextField\n        id=\"filled-secondary\"\n        label=\"Filled secondary\"\n        variant=\"filled\"\n        color=\"secondary\"\n      /> */}\n      <TextField\n        id=\"name\"\n        value={name}\n        onChange = {e => setName(e.target.value)}\n        label=\"Outlined secondary\"\n        variant=\"outlined\"\n        color=\"primary\"\n      />\n      <TextField\n      id=\"rating\"\n      select\n      label=\"Pick\"\n      value={rating}\n      onChange={e => setRating(e.target.value)}\n    //   onChange={handleChange}\n      helperText=\"Please select your currency\"\n      >\n          {betTypes.map((option) => (\n               <MenuItem key={option.value} value={option.value}>\n                   {option.value}\n                   </MenuItem>\n                   ))}\n        {/* <option value=\"1\">1</option>\n        <option value=\"2\">2</option> */}\n    </TextField>\n    <TextField\n          id=\"answer\"\n          label=\"Review\"\n          value={answer}\n          onChange={e => setAnswer(e.target.value)}\n          multiline\n          rows={4}\n        //   defaultValue=\"Comment\"\n          variant=\"outlined\"\n        />\n    <button onClick={handleSubmitReview} type=\"submit\" className=\"auth-btn\">Add Comment</button>\n    </form>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}