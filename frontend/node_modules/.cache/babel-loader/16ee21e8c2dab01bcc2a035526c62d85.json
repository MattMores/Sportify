{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/Body/Body.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./Body.css\";\nimport Header from '../Header.js/Header';\nimport { useDataLayerValue } from '../../DataLayer/DataLayer';\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport SongRow from '../SongRow/SongRow';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllBets, betCreate, deleteBet } from \"../../store/bets\";\nimport { Grid, lighten } from \"@material-ui/core\";\nimport { useHistory } from 'react-router-dom';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport SongRowFake from '../SongRowFake/SongRowFake';\nimport TextField from '@material-ui/core/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Body({\n  spotify\n}) {\n  _s();\n\n  var _spotifyuser$images$;\n\n  const [{\n    discover_weekly,\n    spotifyuser,\n    token\n  }, _dispatch] = useDataLayerValue();\n  const history = useHistory();\n  const [betTeam, setBetTeam] = useState(\"\");\n  const [opposingTeam, setOpposingTeam] = useState(\"\");\n  const [betType, setBetType] = useState(\"Straight\");\n  const [line, setLine] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [reason, setReason] = useState(\"\");\n  const dispatch = useDispatch();\n  let allBets = useSelector(state => Object.values(state.bets));\n  const userId = useSelector(state => {\n    var _state$session$user;\n\n    return (_state$session$user = state.session.user) === null || _state$session$user === void 0 ? void 0 : _state$session$user.id;\n  });\n  const [search, setSearch] = useState(\"\");\n  const [errors, setErrors] = useState(\"\");\n\n  const searchFeature = () => {\n    return allBets.filter(bet => bet.betTeam.toLowerCase().includes(search.toLowerCase()));\n  };\n\n  allBets = searchFeature();\n  console.log(\"000000000\", allBets);\n\n  const playPlaylist = id => {\n    spotify.play({\n      context_uri: `spotify:playlist:0jZc9KmCnD8evywM006qgi`\n    }).then(res => {\n      spotify.getMyCurrentPlayingTrack().then(r => {\n        _dispatch({\n          type: \"SET_ITEM\",\n          item: r.item\n        });\n\n        _dispatch({\n          type: \"SET_PLAYING\",\n          playing: true\n        });\n      });\n    });\n  };\n\n  const playSong = id => {\n    spotify.play({\n      uris: [`spotify:track:${id}`]\n    }).then(res => {\n      spotify.getMyCurrentPlayingTrack().then(r => {\n        _dispatch({\n          type: \"SET_ITEM\",\n          item: r.item\n        });\n\n        _dispatch({\n          type: \"SET_PLAYING\",\n          playing: true\n        });\n      });\n    });\n  };\n\n  useEffect(() => {\n    dispatch(getAllBets());\n  }, [dispatch]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (betTeam && opposingTeam && betType && line && amount && reason) {\n      setErrors(\"\");\n      const newBet = {\n        userId,\n        betTeam,\n        opposingTeam,\n        betType,\n        line,\n        amount,\n        reason\n      };\n      let createdBet = dispatch(betCreate(newBet));\n      dispatch(getAllBets());\n\n      if (createdBet) {\n        setBetTeam(\"\");\n        setpposingTeam(\"\");\n        betType(\"\");\n        history.push('/bets');\n      }\n    } else {\n      setErrors(\"All fields must be filled\");\n    }\n  }; //array.sort date.parse b - date.parse a (a and b are 1st and second argument passed into .sort)\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      spotify: spotify\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__info\",\n      children: [token ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: spotifyuser === null || spotifyuser === void 0 ? void 0 : (_spotifyuser$images$ = spotifyuser.images[0]) === null || _spotifyuser$images$ === void 0 ? void 0 : _spotifyuser$images$.url,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 28\n      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        // src={spotifyuser?.images[0]?.url}\n        src: \"https://www.hypebot.com/wp-content/uploads/2020/07/discover-weekly.png\" // src={discover_weekly?.images[0].url}\n        ,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__infoText\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"BETLIST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Discover Bets Weekly\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Your weekly mixtape of fresh bets. Enjoy new bets and deep cuts selected by your friends. Create, post and update your own bets. And be sure to comment and rate the bets of your friends.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__songs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"body__info\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          action: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error__bets\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: errors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: betTeam,\n                onChange: e => setBetTeam(e.target.value),\n                type: \"text\",\n                className: \"input\",\n                placeholder: \"Team #1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: amount,\n                onChange: e => {\n                  if (isNaN(Number(e.target.value))) {\n                    setErrors(\"Input must be a Number\");\n                    return;\n                  } else {\n                    setErrors(\"\");\n                    setAmount(e.target.value);\n                  }\n                },\n                type: \"text\",\n                className: \"input\",\n                placeholder: \"$$ Amount $$\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: line,\n                onChange: e => {\n                  if (isNaN(Number(e.target.value))) {\n                    setErrors(\"Input must be a Number\");\n                    return;\n                  } else {\n                    setErrors(\"\");\n                    setLine(e.target.value);\n                  }\n                },\n                type: \"text\",\n                className: \"input\",\n                placeholder: \"Line\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: opposingTeam,\n                onChange: e => setOpposingTeam(e.target.value),\n                className: \"input\",\n                type: \"text\",\n                placeholder: \"Team #2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                value: reason,\n                onChange: e => setReason(e.target.value),\n                className: \"input\",\n                type: \"text\",\n                placeholder: \"Reason\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                value: betType,\n                onChange: e => setBetType(e.target.value),\n                className: \"input\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  disabled: true,\n                  children: \"Bet Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Straight\",\n                  children: \"Straight\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Spread\",\n                  children: \"Spread\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Over\",\n                  children: \"Over\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Under\",\n                  children: \"Under\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Parlay\",\n                  children: \"Parlay\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleSubmit,\n                type: \"submit\",\n                className: \"auth-btn\",\n                children: \"Add Bet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 27\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header__left\",\n        children: [/*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"searchBets\",\n          placeholder: \"Search For Teams To Bet On...\",\n          type: \"search\",\n          value: search,\n          onChange: e => setSearch(e.target.value),\n          className: \"input-5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this), allBets && allBets.map(bet => /*#__PURE__*/_jsxDEV(SongRow, {\n        bet: bet\n      }, bet.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(SongRowFake, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Body, \"T/lbsY1AZNmuS6njSea39MjALxw=\", false, function () {\n  return [useDataLayerValue, useHistory, useDispatch, useSelector, useSelector];\n});\n\n_c = Body;\nexport default Body;\n\nvar _c;\n\n$RefreshReg$(_c, \"Body\");","map":{"version":3,"sources":["/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/Body/Body.js"],"names":["React","Header","useDataLayerValue","PlayCircleFilledIcon","FavoriteIcon","MoreHorizIcon","SongRow","useState","useEffect","useDispatch","useSelector","getAllBets","betCreate","deleteBet","Grid","lighten","useHistory","SearchIcon","SongRowFake","TextField","Body","spotify","discover_weekly","spotifyuser","token","_dispatch","history","betTeam","setBetTeam","opposingTeam","setOpposingTeam","betType","setBetType","line","setLine","amount","setAmount","reason","setReason","dispatch","allBets","state","Object","values","bets","userId","session","user","id","search","setSearch","errors","setErrors","searchFeature","filter","bet","toLowerCase","includes","console","log","playPlaylist","play","context_uri","then","res","getMyCurrentPlayingTrack","r","type","item","playing","playSong","uris","handleSubmit","e","preventDefault","newBet","createdBet","setpposingTeam","push","images","url","target","value","isNaN","Number","map"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./Body.css\"\nimport Header from '../Header.js/Header'\nimport { useDataLayerValue } from '../../DataLayer/DataLayer'\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\nimport SongRow from '../SongRow/SongRow';\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllBets, betCreate, deleteBet } from \"../../store/bets\";\nimport { Grid, lighten } from \"@material-ui/core\";\nimport { useHistory } from 'react-router-dom';\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport SongRowFake from '../SongRowFake/SongRowFake';\nimport TextField from '@material-ui/core/TextField';\n\n\nfunction Body( { spotify }) {\n    const [{ discover_weekly, spotifyuser, token }, _dispatch ] = useDataLayerValue();\n    const history = useHistory();\n    const [betTeam, setBetTeam] = useState(\"\");\n    const [opposingTeam, setOpposingTeam] = useState(\"\");\n    const [betType, setBetType] = useState(\"Straight\");\n    const [line, setLine] = useState(\"\");\n    const [amount, setAmount] = useState(\"\");\n    const [reason, setReason] = useState(\"\");\n    const dispatch = useDispatch();\n    let allBets = useSelector(state => Object.values(state.bets));\n    const userId = useSelector(state => state.session.user?.id);\n    const [search, setSearch] = useState(\"\");\n    const [errors, setErrors] = useState(\"\");\n\n    const searchFeature = () => {\n        return allBets.filter((bet) =>\n        bet.betTeam.toLowerCase().includes(search.toLowerCase())\n        );\n    }\n\n    allBets = searchFeature();\n\n    console.log(\"000000000\", allBets)\n\n    const playPlaylist = (id) => {\n        spotify\n          .play({\n            context_uri: `spotify:playlist:0jZc9KmCnD8evywM006qgi`,\n          })\n          .then((res) => {\n            spotify.getMyCurrentPlayingTrack().then((r) => {\n              _dispatch({\n                type: \"SET_ITEM\",\n                item: r.item,\n              });\n              _dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n              });\n            });\n          });\n      };\n\n      const playSong = (id) => {\n        spotify\n          .play({\n            uris: [`spotify:track:${id}`],\n          })\n          .then((res) => {\n            spotify.getMyCurrentPlayingTrack().then((r) => {\n              _dispatch({\n                type: \"SET_ITEM\",\n                item: r.item,\n              });\n              _dispatch({\n                type: \"SET_PLAYING\",\n                playing: true,\n              });\n            });\n          });\n      };\n\n      useEffect(() => {\n        dispatch(getAllBets());\n      }, [dispatch]);\n\n      const handleSubmit = (e) => {\n        e.preventDefault();\n        if (betTeam && opposingTeam && betType && line && amount && reason) {\n          setErrors(\"\")\n          const newBet = {userId, betTeam, opposingTeam, betType, line, amount, reason }\n          let createdBet = dispatch(betCreate(newBet))\n          dispatch(getAllBets())\n          if (createdBet) {\n            setBetTeam(\"\")\n            setpposingTeam(\"\")\n            betType(\"\")\n\n            history.push('/bets')\n        }\n        } else {\n         setErrors(\"All fields must be filled\")\n        }\n      }\n\n      //array.sort date.parse b - date.parse a (a and b are 1st and second argument passed into .sort)\n\n    return (\n        <div className=\"body\">\n            <Header spotify={spotify}/>\n            <div className=\"body__info\">\n                {/* <img src=\"https://thumb.spokesman.com/GsJALbsxruDIAgPJdGdubb-x00I=/2500x0/media.spokesman.com/photos/2020/07/15/5f0dee5554d81.hires.jpg\" alt=\"\"/> */}\n                { token ? (<img src={spotifyuser?.images[0]?.url} alt=\"\"/>) : (\n                <img\n                // src={spotifyuser?.images[0]?.url}\n                src=\"https://www.hypebot.com/wp-content/uploads/2020/07/discover-weekly.png\"\n                // src={discover_weekly?.images[0].url}\n                alt=\"\"\n                />\n                )}\n                <div className=\"body__infoText\">\n                    <strong>BETLIST</strong>\n                    <h2>Discover Bets Weekly</h2>\n                {/* <p>description...</p> */}\n                    {/* <p>{discover_weekly?.description}</p> */}\n                    <p>Your weekly mixtape of fresh bets. Enjoy new bets and deep cuts selected by your friends. Create, post and update your own bets. And be sure to comment and rate the bets of your friends.</p>\n                </div>\n                </div>\n                <div className=\"body__songs\">\n                {/* <div className=\"body__icons\">\n                    <PlayCircleFilledIcon\n                    className=\"body__shuffle\"\n                    onClick={playPlaylist}/>\n                    <FavoriteIcon fontSize=\"large\"/>\n                    <MoreHorizIcon />\n                </div> */}\n                  <div className=\"body__info\">\n                    {/* <tr key={bet.id}></tr> */}\n                    <form action=\"\">\n                    <div className=\"error__bets\">\n                        {/* {errors.map((error, idx) => <div key={idx}>{error}</div>)} */}\n                        <div>{errors}</div>\n                      </div>\n                      <Grid container spacing={2}>\n                      <Grid item>\n                        <input value={betTeam} onChange={e => setBetTeam(e.target.value)} type = \"text\" className=\"input\" placeholder=\"Team #1\"/>\n                      </Grid>\n                      <Grid item>\n                        <input value={amount} onChange={e => {if (isNaN(Number(e.target.value))){\n                          setErrors(\"Input must be a Number\")\n                          return\n                        }\n                          else {\n                            setErrors(\"\")\n                            setAmount(e.target.value)\n                          }\n                        }} type = \"text\" className=\"input\" placeholder=\"$$ Amount $$\"/>\n                      </Grid>\n                      <Grid item>\n                        <input value={line} onChange={e => {if (isNaN(Number(e.target.value))){\n                          setErrors(\"Input must be a Number\")\n                          return\n                        }\n                          else {\n                            setErrors(\"\")\n                            setLine(e.target.value)\n                          }\n                        }} type = \"text\" className=\"input\" placeholder=\"Line\"/>\n                      </Grid>\n                        <Grid item>\n                        <input value={opposingTeam} onChange={e => setOpposingTeam(e.target.value)} className=\"input\" type=\"text\" placeholder=\"Team #2\"/>\n                        </Grid>\n                        <Grid item>\n                        <input value={reason} onChange={e => setReason(e.target.value)} className=\"input\" type=\"text\" placeholder=\"Reason\"/>\n                        </Grid>\n                        <Grid item>\n                        <select value={betType} onChange={e => setBetType (e.target.value)} className=\"input\">\n                          <option disabled>Bet Type</option>\n                          <option value=\"Straight\">Straight</option>\n                          <option value=\"Spread\">Spread</option>\n                          <option value=\"Over\">Over</option>\n                          <option value=\"Under\">Under</option>\n                          <option value=\"Parlay\">Parlay</option>\n                        </select>\n                        </Grid>\n                        <Grid item>\n                          <button onClick={handleSubmit} type=\"submit\" className=\"auth-btn\">Add Bet</button>\n                        </Grid>\n                      </Grid>\n                    </form>\n                </div>\n                <div className=\"header__left\">\n                     <SearchIcon />\n                      <input\n                          id=\"searchBets\"\n                          placeholder=\"Search For Teams To Bet On...\"\n                          type=\"search\"\n                          value={search}\n                          onChange={(e) => setSearch(e.target.value)}\n                          className=\"input-5\"\n                      />\n                </div>\n                    {/* List of songs */}\n                    {/* {discover_weekly?.tracks.items.map( (item) => (\n                        <SongRow playSong={playSong} track={item.track} />\n                        ))} */}\n                        {/* array.sort.map here */}\n                    {allBets && allBets.map( (bet) => (\n                        <SongRow key={bet.id} bet={bet} />\n                        ))}\n                </div>\n                <SongRowFake/>\n        </div>\n    )\n}\n\nexport default Body;\n"]},"metadata":{},"sourceType":"module"}