{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/SongRow/SongRow.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './SongRow.css';\nimport { Grid } from \"@material-ui/core\";\nimport { deleteBet } from \"../../store/bets\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UpdatePageModal from '../UpdatePage/UpdatePage';\nimport StarRating from '../StarRating/StarRating';\nimport songrowlogo_cropped from \"./songrowlogo_cropped.png\"; // function SongRow( {track, playSong}) {\n//     return (\n//         <div className=\"songRow\" onClick={() => playSong(track.id)}>\n//             <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\"/>\n//             <div className=\"songRow__info\">\n//                 <h1>{track.name}</h1>\n//                 <p>\n//                     {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\n//                     {track.album.name}\n//                 </p>\n//             </div>\n//         </div>\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongRow({\n  bet\n}) {\n  _s();\n\n  var _bet$User;\n\n  const {\n    id\n  } = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const user = useSelector(state => state.session.user); // const renderRating = (bet) => {\n  //     if (!bet.count) {\n  //         return <span>0 Reviews</span>\n  //     }\n  //     return (\n  //         <>\n  //         <StarRating rating={bet.id} />\n  //         <span>({bet.count})</span>\n  //         </>\n  //     )\n  // }\n  // const handleUpdate = (id) => {\n  //     history.push(`/bets/${id}/update`)\n  // }\n\n  const handleDelete = id => {\n    // e.stopPropagation()\n    dispatch(deleteBet(id));\n  };\n\n  const handleBetSelect = id => {\n    history.push(`/bets/${id}`);\n  }; // useEffect(() => {\n  // }, [dispatch]);\n  // onClick={() => handleBetSelect(bet.id)}\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"songRow\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"songRow__album\",\n      src: songrowlogo_cropped,\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songRow__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: bet === null || bet === void 0 ? void 0 : (_bet$User = bet.User) === null || _bet$User === void 0 ? void 0 : _bet$User.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), bet.line > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"$\", bet.amount, \": \", bet.betTeam, \" +\", bet.line, \" (\", bet.betType, \") vs. \", bet.opposingTeam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"$\", bet.amount, \": \", bet.betTeam, \" -\", bet.line, \" (\", bet.betType, \") vs. \", bet.opposingTeam]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Reason: \", bet.reason]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleBetSelect(bet.id),\n            className: \"auth-btn_row\",\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: (bet === null || bet === void 0 ? void 0 : bet.userId) === id ? /*#__PURE__*/_jsxDEV(UpdatePageModal, {\n            bet: bet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 39\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: (bet === null || bet === void 0 ? void 0 : bet.userId) === id ? /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(bet === null || bet === void 0 ? void 0 : bet.id),\n            className: \"auth-btn_row\",\n            children: \"Delete Bet\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 39\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SongRow, \"UfeRFtwrjdZ1biYAXb2lPwQFiMY=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useSelector];\n});\n\n_c = SongRow;\nexport default SongRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongRow\");","map":{"version":3,"sources":["/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/SongRow/SongRow.js"],"names":["React","Grid","deleteBet","useDispatch","useSelector","useEffect","useHistory","UpdatePageModal","StarRating","songrowlogo_cropped","SongRow","bet","id","state","session","user","dispatch","history","handleDelete","handleBetSelect","push","User","username","line","amount","betTeam","betType","opposingTeam","reason","userId"],"mappings":"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","sourcesContent":["import React from 'react'\nimport './SongRow.css'\nimport { Grid } from \"@material-ui/core\";\nimport { deleteBet } from \"../../store/bets\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UpdatePageModal from '../UpdatePage/UpdatePage';\nimport StarRating from '../StarRating/StarRating';\nimport songrowlogo_cropped from \"./songrowlogo_cropped.png\"\n\n\n// function SongRow( {track, playSong}) {\n//     return (\n//         <div className=\"songRow\" onClick={() => playSong(track.id)}>\n//             <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\"/>\n//             <div className=\"songRow__info\">\n//                 <h1>{track.name}</h1>\n//                 <p>\n//                     {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\n//                     {track.album.name}\n//                 </p>\n//             </div>\n\n//         </div>\n//     )\n// }\n\nfunction SongRow( {bet} ) {\n\n    const { id } = useSelector(state => state.session.user);\n    const dispatch = useDispatch()\n    const history = useHistory();\n    const user = useSelector(state => state.session.user);\n\n    // const renderRating = (bet) => {\n    //     if (!bet.count) {\n    //         return <span>0 Reviews</span>\n    //     }\n    //     return (\n    //         <>\n    //         <StarRating rating={bet.id} />\n    //         <span>({bet.count})</span>\n    //         </>\n    //     )\n    // }\n    // const handleUpdate = (id) => {\n    //     history.push(`/bets/${id}/update`)\n    // }\n    const handleDelete = (id) => {\n        // e.stopPropagation()\n        dispatch(deleteBet(id))\n    }\n\n    const handleBetSelect = (id) => {\n        history.push(`/bets/${id}`)\n    }\n\n    // useEffect(() => {\n    // }, [dispatch]);\n    // onClick={() => handleBetSelect(bet.id)}\n    return (\n        <div className=\"songRow\">\n            <img className=\"songRow__album\" src={songrowlogo_cropped} alt=\"\"/>\n            <div className=\"songRow__info\">\n                <h1>{bet?.User?.username}</h1>\n                {bet.line > 0 ?\n                <p>\n                ${bet.amount}: {bet.betTeam} +{bet.line} ({bet.betType}) vs. {bet.opposingTeam}\n                </p>\n                :\n                <p>\n                ${bet.amount}: {bet.betTeam} -{bet.line} ({bet.betType}) vs. {bet.opposingTeam}\n                </p>\n                }\n                <p>\n                    Reason: {bet.reason}\n                </p>\n                <Grid container spacing={2}>\n                <Grid item>\n                {/* {bet.userId === id ? <button onClick={() => handleBetSelect(bet.id)} className=\"btn\">Comment</button> : null} */}\n                <button onClick={() => handleBetSelect(bet.id)} className=\"auth-btn_row\">Comment</button>\n                </Grid>\n                <Grid item>\n                {/* {bet.userId === id ? <button onClick={() => handleUpdate(bet.id)} className=\"btn\">Update Bet</button> : null} */}\n                {bet?.userId === id ? <UpdatePageModal bet= {bet} /> : null}\n                </Grid>\n                <Grid item>\n                {bet?.userId === id ? <button onClick={() => handleDelete(bet?.id)} className=\"auth-btn_row\">Delete Bet</button> : null}\n                </Grid>\n                </Grid>\n            </div>\n\n        </div>\n    )\n}\n\nexport default SongRow\n"]},"metadata":{},"sourceType":"module"}