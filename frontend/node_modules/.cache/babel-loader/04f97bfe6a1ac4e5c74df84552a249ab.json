{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/UpdatePage/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport \"./UpdatePage.css\";\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllBets, betCreate, betUpdate } from \"../../store/bets\";\nimport { Grid } from \"@material-ui/core\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdatePage({\n  setShowModal,\n  bet\n}) {\n  _s();\n\n  const history = useHistory();\n  const [betTeam, setBetTeam] = useState(bet.betTeam);\n  const [opposingTeam, setOpposingTeam] = useState(bet.opposingTeam);\n  const [betType, setBetType] = useState(bet.betType);\n  const [line, setLine] = useState(bet.line);\n  const [amount, setAmount] = useState(bet.amount);\n  const [reason, setReason] = useState(bet.reason);\n  const dispatch = useDispatch();\n  const [errors, setErrors] = useState(\"\"); // const allBets = useSelector(state => Object.values(state.bets));\n  // const userId = useSelector(state => state.session.user?.id);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (betTeam && opposingTeam && betType && line && amount && reason) {\n      setErrors(\"\");\n      const updateOneBet = {\n        userId: bet.userId,\n        betTeam,\n        opposingTeam,\n        betType,\n        line,\n        amount,\n        reason,\n        id: bet.id\n      };\n      dispatch(betUpdate(updateOneBet)); // dispatch(getAllBets())\n\n      setShowModal(false);\n    } else {\n      setErrors(\"All fields must be filled\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body-modal\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body__info__\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error__bets\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: betTeam,\n              onChange: e => setBetTeam(e.target.value),\n              type: \"text\",\n              className: \"input\",\n              placeholder: \"Team #1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: opposingTeam,\n              onChange: e => setOpposingTeam(e.target.value),\n              className: \"input\",\n              type: \"text\",\n              placeholder: \"Team #2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              value: reason,\n              onChange: e => setReason(e.target.value),\n              className: \"input\",\n              type: \"text\",\n              placeholder: \"Reason\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: betType,\n              onChange: e => setBetType(e.target.value),\n              className: \"input\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                disabled: true,\n                children: \"Bet Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Straight\",\n                children: \"Straight\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Spread\",\n                children: \"Spread\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Over\",\n                children: \"Over\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Under\",\n                children: \"Under\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Parlay\",\n                children: \"Parlay\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmit,\n              type: \"submit\",\n              className: \"auth-btn_\",\n              children: \"Update Bet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UpdatePage, \"yNY75JbeLXaDbyHnhBp4S05yCEQ=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = UpdatePage;\nexport default UpdatePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdatePage\");","map":{"version":3,"sources":["/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/UpdatePage/index.js"],"names":["React","useState","useEffect","useDispatch","useSelector","getAllBets","betCreate","betUpdate","Grid","useHistory","useParams","UpdatePage","setShowModal","bet","history","betTeam","setBetTeam","opposingTeam","setOpposingTeam","betType","setBetType","line","setLine","amount","setAmount","reason","setReason","dispatch","errors","setErrors","handleSubmit","e","preventDefault","updateOneBet","userId","id","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport \"./UpdatePage.css\"\nimport { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllBets, betCreate, betUpdate } from \"../../store/bets\";\nimport { Grid } from \"@material-ui/core\";\nimport { useHistory, useParams } from 'react-router-dom';\n\n\n\nfunction UpdatePage({setShowModal , bet}) {\n\n    const history = useHistory();\n    const [betTeam, setBetTeam] = useState(bet.betTeam);\n    const [opposingTeam, setOpposingTeam] = useState(bet.opposingTeam);\n    const [betType, setBetType] = useState(bet.betType);\n    const [line, setLine] = useState(bet.line);\n    const [amount, setAmount] = useState(bet.amount);\n    const [reason, setReason] = useState(bet.reason);\n    const dispatch = useDispatch();\n    const [errors, setErrors] = useState(\"\");\n    // const allBets = useSelector(state => Object.values(state.bets));\n    // const userId = useSelector(state => state.session.user?.id);\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (betTeam && opposingTeam && betType && line && amount && reason) {\n        setErrors(\"\")\n        const updateOneBet = {userId:bet.userId, betTeam, opposingTeam, betType, line, amount, reason, id:bet.id }\n        dispatch(betUpdate(updateOneBet))\n        // dispatch(getAllBets())\n        setShowModal(false)\n        } else {\n            setErrors(\"All fields must be filled\")\n        }\n      }\n\n    return (\n        <div className=\"body-modal\">\n        <div className=\"body__info__\">\n        {/* <tr key={bet.id}></tr> */}\n        <form action=\"\">\n        <div className=\"error__bets\">\n                        {/* {errors.map((error, idx) => <div key={idx}>{error}</div>)} */}\n                        <div>{errors}</div>\n                      </div>\n          <Grid container spacing={2}>\n          <Grid item>\n            <input value={betTeam} onChange={e => setBetTeam(e.target.value)} type = \"text\" className=\"input\" placeholder=\"Team #1\"/>\n          </Grid>\n          {/* <Grid item>\n            <input value={amount} onChange={e => setAmount(e.target.value)} type = \"text\" className=\"input\" placeholder=\"$$ Amount $$\"/>\n          </Grid>\n          <Grid item>\n            <input value={line} onChange={e => setLine(e.target.value)} type = \"text\" className=\"input\" placeholder=\"Line\"/>\n          </Grid> */}\n          \n            <Grid item>\n            <input value={opposingTeam} onChange={e => setOpposingTeam(e.target.value)} className=\"input\" type=\"text\" placeholder=\"Team #2\"/>\n            </Grid>\n            <Grid item>\n            <input value={reason} onChange={e => setReason(e.target.value)} className=\"input\" type=\"text\" placeholder=\"Reason\"/>\n            </Grid>\n            <Grid item>\n            <select value={betType} onChange={e => setBetType(e.target.value)} className=\"input\">\n              <option disabled>Bet Type</option>\n              <option value=\"Straight\">Straight</option>\n              <option value=\"Spread\">Spread</option>\n              <option value=\"Over\">Over</option>\n              <option value=\"Under\">Under</option>\n              <option value=\"Parlay\">Parlay</option>\n            </select>\n            </Grid>\n            <Grid item>\n              <button onClick={handleSubmit} type=\"submit\" className=\"auth-btn_\">Update Bet</button>\n            </Grid>\n          </Grid>\n        </form>\n    </div>\n    </div>\n    )\n}\n\nexport default UpdatePage\n"]},"metadata":{},"sourceType":"module"}