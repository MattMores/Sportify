{"ast":null,"code":"var _jsxFileName = \"/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/Reviews/Reviews.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport StarRating from '../StarRating/StarRating';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3)\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2)\n  }\n}));\nconst message = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support.`;\nexport default function Reviews({\n  review\n}) {\n  _s();\n\n  const {\n    id\n  } = useSelector(state => state.session.user);\n  const classes = useStyles();\n  console.log(\"9999999\", review);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            children: \"W\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: true,\n          children: [/*#__PURE__*/_jsxDEV(StarRating, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"review_name\",\n            children: review.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: review.answer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: (review === null || review === void 0 ? void 0 : review.userId) === id ? /*#__PURE__*/_jsxDEV(UpdatePageModal, {\n            bet: bet\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 40\n          }, this) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Reviews, \"T5Ns5XPb5LSXeT4nLs8f5bI9grw=\", true, function () {\n  return [useStyles];\n});\n\n_c = Reviews;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"sources":["/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/components/Reviews/Reviews.js"],"names":["React","Paper","makeStyles","Grid","Avatar","Typography","StarRating","useStyles","theme","root","flexGrow","overflow","padding","spacing","paper","maxWidth","margin","message","Reviews","review","id","useSelector","state","session","user","classes","console","log","name","answer","userId","bet"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;;AAEA,MAAMC,SAAS,GAAGL,UAAU,CAAEM,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,QAAQ,EAAE,QAFN;AAGJC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAHL,GADiC;AAMvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,GADL;AAELC,IAAAA,MAAM,EAAG,GAAER,KAAK,CAACK,OAAN,CAAc,CAAd,CAAiB,SAFvB;AAGLD,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd;AAHJ;AANgC,CAAZ,CAAD,CAA5B;AAaA,MAAMI,OAAO,GAAI;AACjB,oEADA;AAGA,eAAe,SAASC,OAAT,CAAkB;AAACC,EAAAA;AAAD,CAAlB,EAA4B;AAAA;;AACvC,QAAM;AAAEC,IAAAA;AAAF,MAASC,WAAW,CAACC,KAAK,IAAIA,KAAK,CAACC,OAAN,CAAcC,IAAxB,CAA1B;AACF,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBR,MAAvB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEM,OAAO,CAAChB,IAAxB;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,SAAS,EAAEgB,OAAO,CAACX,KAA1B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,IAAI,EAAC,QAArB;AAA8B,QAAA,OAAO,EAAE,CAAvC;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,iCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,MAAb;AAAA,kCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAA8BK,MAAM,CAACS;AAArC;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,UAAD;AAAA,sBAAaT,MAAM,CAACU;AAApB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eASE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAA,oBACK,CAAAV,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEW,MAAR,MAAmBV,EAAnB,gBAAwB,QAAC,eAAD;AAAiB,YAAA,GAAG,EAAGW;AAAvB;AAAA;AAAA;AAAA;AAAA,kBAAxB,GAAyD;AAD9D;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAxBuBb,O;UAENX,S;;;KAFMW,O","sourcesContent":["import React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport StarRating from '../StarRating/StarRating';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    overflow: 'hidden',\n    padding: theme.spacing(0, 3),\n  },\n  paper: {\n    maxWidth: 400,\n    margin: `${theme.spacing(1)}px auto`,\n    padding: theme.spacing(2),\n  },\n}));\n\nconst message = `Truncation should be conditionally applicable on this long line of text\n as this is a much longer line than what the container can support.`;\n\nexport default function Reviews( {review}) {\n    const { id } = useSelector(state => state.session.user);\n  const classes = useStyles();\n  console.log(\"9999999\", review)\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container wrap=\"nowrap\" spacing={2}>\n          <Grid item>\n            <Avatar>W</Avatar>\n          </Grid>\n          <Grid item xs>\n            <StarRating />\n            <div className=\"review_name\">{review.name}</div>\n            <Typography>{review.answer}</Typography>\n          </Grid>\n          <Grid item>\n              {review?.userId === id ? <UpdatePageModal bet= {bet} /> : null}\n              </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}