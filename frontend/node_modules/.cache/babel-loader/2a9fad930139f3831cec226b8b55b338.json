{"ast":null,"code":"import { csrfFetch } from \"./csrf\"; // Define Action TYpes as Constants\n\nconst SET_BETS = \"bets/GET_ALL_BETS\";\nconst ADD_BET = \"bets/ADD_BET\"; // Define Action Creators\n\nconst setBets = bets => ({\n  type: SET_BETS,\n  bets // payload\n\n});\n\nconst addBet = bet => ({\n  type: ADD_BET,\n  bet\n}); // Define Thunks\n\n\nexport const getAllBets = () => async dispatch => {\n  const res = await csrfFetch('/api/bets');\n  const bets = await res.json();\n  dispatch(setBets(bets));\n};\nexport const betCreate = bet => async dispatch => {\n  // console.log(bet)\n  // const { userId, title, content, notebookId } = note; //notebookId\n  const response = await csrfFetch(\"/api/bets\", {\n    method: \"POST\",\n    body: JSON.stringify(bet)\n  }); // const newNote = await response.json();\n  // console.log(newNote)\n  // dispatch(addNote(newNote));\n  // return response;\n}; // Define an initial state\n\nconst initialState = {}; //Define a Reducer\n\nconst betsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_BETS:\n      const allBets = {};\n      action.bets.forEach(bet => {\n        allBets[bet.id] = bet;\n      });\n      return { ...state,\n        ...allBets\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default betsReducer;","map":{"version":3,"sources":["/Users/matthewmores/AppAcademy/Capstone/Sportify/frontend/src/store/bets.js"],"names":["csrfFetch","SET_BETS","ADD_BET","setBets","bets","type","addBet","bet","getAllBets","dispatch","res","json","betCreate","response","method","body","JSON","stringify","initialState","betsReducer","state","action","allBets","forEach","id"],"mappings":"AAAA,SAASA,SAAT,QAA0B,QAA1B,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,mBAAjB;AACA,MAAMC,OAAO,GAAG,cAAhB,C,CAEA;;AACA,MAAMC,OAAO,GAAIC,IAAD,KAAW;AACvBC,EAAAA,IAAI,EAAEJ,QADiB;AAEvBG,EAAAA,IAFuB,CAEjB;;AAFiB,CAAX,CAAhB;;AAKA,MAAME,MAAM,GAAIC,GAAD,KAAU;AACrBF,EAAAA,IAAI,EAAEH,OADe;AAErBK,EAAAA;AAFqB,CAAV,CAAf,C,CAKA;;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,QAAMC,GAAG,GAAG,MAAMV,SAAS,CAAC,WAAD,CAA3B;AACA,QAAMI,IAAI,GAAG,MAAMM,GAAG,CAACC,IAAJ,EAAnB;AACAF,EAAAA,QAAQ,CAACN,OAAO,CAACC,IAAD,CAAR,CAAR;AACH,CAJM;AAMP,OAAO,MAAMQ,SAAS,GAAIL,GAAD,IAAS,MAAOE,QAAP,IAAoB;AAClD;AACA;AACA,QAAMI,QAAQ,GAAG,MAAMb,SAAS,CAAC,WAAD,EAAc;AAC1Cc,IAAAA,MAAM,EAAE,MADkC;AAE1CC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,GAAf;AAFoC,GAAd,CAAhC,CAHkD,CAOlD;AACA;AACA;AACA;AACH,CAXM,C,CAaP;;AACA,MAAMW,YAAY,GAAG,EAArB,C,CAEA;;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAAChB,IAAf;AACI,SAAKJ,QAAL;AACI,YAAMqB,OAAO,GAAG,EAAhB;AACAD,MAAAA,MAAM,CAACjB,IAAP,CAAYmB,OAAZ,CAAqBhB,GAAD,IAAS;AACzBe,QAAAA,OAAO,CAACf,GAAG,CAACiB,EAAL,CAAP,GAAkBjB,GAAlB;AACH,OAFD;AAGA,aAAO,EACH,GAAGa,KADA;AAEH,WAAGE;AAFA,OAAP;;AAIJ;AACI,aAAOF,KAAP;AAXR;AAaH,CAdD;;AAgBA,eAAeD,WAAf","sourcesContent":["import { csrfFetch } from \"./csrf\";\n\n// Define Action TYpes as Constants\nconst SET_BETS = \"bets/GET_ALL_BETS\";\nconst ADD_BET = \"bets/ADD_BET\"\n\n// Define Action Creators\nconst setBets = (bets) => ({\n    type: SET_BETS,\n    bets, // payload\n})\n\nconst addBet = (bet) => ({\n    type: ADD_BET,\n    bet,\n  });\n\n// Define Thunks\nexport const getAllBets = () => async (dispatch) => {\n    const res = await csrfFetch('/api/bets');\n    const bets = await res.json();\n    dispatch(setBets(bets));\n}\n\nexport const betCreate = (bet) => async (dispatch) => {\n    // console.log(bet)\n    // const { userId, title, content, notebookId } = note; //notebookId\n    const response = await csrfFetch(\"/api/bets\", {\n        method: \"POST\",\n        body: JSON.stringify(bet),\n    });\n    // const newNote = await response.json();\n    // console.log(newNote)\n    // dispatch(addNote(newNote));\n    // return response;\n};\n\n// Define an initial state\nconst initialState = {};\n\n//Define a Reducer\nconst betsReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_BETS:\n            const allBets = {};\n            action.bets.forEach((bet) => {\n                allBets[bet.id] = bet;\n            })\n            return {\n                ...state,\n                ...allBets,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default betsReducer;\n"]},"metadata":{},"sourceType":"module"}